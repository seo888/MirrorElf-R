services:
  mirror_elf_r:
    network_mode: host
    restart: always
    build: ./app
    container_name: mirror_elf_r
    depends_on:
      minio:
        condition: service_healthy # 确保 minio 健康后再启动
    volumes:
      - ./app:/app
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000" # API 端口
      - "9001:9001" # 控制台端口
    network_mode: host
    restart: always
    environment:
      MINIO_ACCESS_KEY: minio # 访问密钥
      MINIO_SECRET_KEY: minio123 # 秘密密钥
    volumes:
      - ./minio/data:/data # 数据存储目录
      - ./minio/config:/root/.minio # 配置文件目录
    command: server /data --console-address ":9001" -address ":9000" # 启动命令
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"] # 检查 MinIO 健康状态
      interval: 10s # 每 10 秒检查一次
      timeout: 5s # 超时时间
      retries: 10 # 重试次数
  postgres:
    image: postgres:16
    container_name: postgres_db
    restart: on-failure
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: mirrorelf
      POSTGRES_DB: mirror
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "max_connections=4096"]
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
  volumes:
    postgres_db_data:
      driver: local
      driver_opts:
        type: none
        o: bind
        device: /www/MirrorElf/postgres_data  # 指定外部的路径